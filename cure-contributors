#!/usr/bin/env node

import { spawn } from 'child_process';
import { readFileSync } from 'fs';
import { fileURLToPath } from 'url';
import path from 'path';
import { Command } from 'commander';
import { purgeCureList } from './src/tasks.js';

// Recreate __dirname for ES modules
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const packageJsonPath = path.join(__dirname, 'package.json');
const packageJson = JSON.parse(readFileSync(packageJsonPath, 'utf-8'));

// Create CLI parser
const program = new Command();

program
  .version(packageJson.version, '-v, --version', 'Output the current version')
  .description(packageJson.description)
  .option('--purge-cure-list', 'Purge the cure list')
  .helpCommand(true);

program.parse(process.argv);
const options = program.opts();

// Handle CLI commands
if (options.purgeCureList) {
  purgeCureList().then(() => process.exit(0));
}
else {
  // Launch the Electron GUI if no CLI command is provided
  const electronPath = path.join(__dirname, 'node_modules/electron/dist/electron'); // Direct path to Electron executable
  const electronAppPath = path.resolve(__dirname, '.');

  const child = spawn(electronPath, [electronAppPath]);

  child.on('close', (code) => {
    process.exit(code);
  });
}
